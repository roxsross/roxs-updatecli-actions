name: Actualización de Aplicaciones Estándar

on:
  # Ejecución programada: primer día de cada mes
  schedule:
    - cron: '0 7 1 * *'
  
  # Permitir ejecución manual desde la interfaz de GitHub
  workflow_dispatch:
    inputs:
      app-filter:
        description: 'Filtro de aplicación (opcional)'
        required: false
        type: string

permissions:
  contents: write
  pull-requests: write

jobs:
  update-standard-apps:
    name: Actualizar aplicaciones estándar
    runs-on: ubuntu-latest
    steps:
      - name: Checkout del código
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Configurar git
        run: |
          git config --global user.name "Updatecli Bot"
          git config --global user.email "updatecli-bot@miempresa.com"
      
      - name: Instalar Updatecli
        uses: updatecli/updatecli-action@v2

      - name: Ejecutar Updatecli
        run: |
          if [ -n "${{ github.event.inputs.app-filter }}" ]; then
            echo "Ejecutando Updatecli con filtro: ${{ github.event.inputs.app-filter }}"
            updatecli apply --config updatecli/updatecli.d/standard --values updatecli/values.yaml --filter "${{ github.event.inputs.app-filter }}"
          else
            echo "Ejecutando Updatecli para todas las aplicaciones estándar"
            updatecli apply --config updatecli/updatecli.d/standard --values updatecli/values.yaml
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Generar informe
        if: always()
        run: |
          echo "# Informe de actualizaciones $(date '+%Y-%m-%d')" > update-report.md
          echo "## Aplicaciones estándar" >> update-report.md
          echo "Estado de ejecución: ${{ job.status }}" >> update-report.md
          
          echo "## Pull Requests creados:" >> update-report.md
          gh pr list --search "author:app/github-actions created:>$(date -d 'yesterday' '+%Y-%m-%d')" --json number,title,url | jq -r '.[] | "- [#\(.number): \(.title)](\(.url))"' >> update-report.md || echo "- No se pudieron obtener PRs recientes" >> update-report.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Publicar informe
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: update-report-standard
          path: update-report.md
